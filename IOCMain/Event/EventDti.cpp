// EventDti.cpp: implementation of the CEventDti class.
//
//////////////////////////////////////////////////////////////////////
/*
 * Author: Zheng Miao
 * All rights reserved.
 * $Header: EventDti.cpp 1.15 2009/06/05 09:15:55PDT Zheng Miao (zmiao) Exp  $
 * $Revision: 1.15 $
 */

#include "EventDti.h"
#include "EventId.h"
#include "stdio.h"
#include "AllProcess.h"

#if (!defined(BASIC_EVENT_ONLY)) || (BASIC_EVENT_ONLY == 0)

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////
SEventKB const CEventDti::m_eventList[] = {
	// eventId , flag,	
	// aidOneStart(inclusive, allowed),	AidOneEnd(non-inclusive),	AidTwoStart,	AidTwoEnd,	
	// pAcronym, pDebug	initState(0: inactive, 1: active) 
	// alarm level,  log  ,  SA
{COMM_RTE_EVENT_CARD_ACTIVE, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CARDACTV", "Card Active", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_CARD_STANDBY, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CARDSTBY", "Card Standby", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_WARMUP, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CLKWARM", "Clock Warmup", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_FREERUN, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CLKFREE", "Clock Freerun", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_FAST_TRACK, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CLKFSTRK", "Clock Fast Track", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_NORM_TRACK, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CLKNMTRK", "Clock Normal Track", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_BRIDGE, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CLKBRG", "Clock Bridging", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_HOLDOVER, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CLKHOLD", "Clock Holdover", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_CARD_FAIL, 	CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	CAllProcess::CARD_FAIL_INDEX_START, CAllProcess::CARD_FAIL_INDEX_END, 0, 1, "CARDFAIL", "Card Failure", 0,
	COMM_ALARM_LEVEL_CRITICAL,		1,	0
},

{COMM_RTE_EVENT_CARD_OFFLINE, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CARDOFF", "Card Offline", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_INTERRUPT_LOSS, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "INTRLOS", "FPGA Interrupt Loss", 0,
	COMM_ALARM_LEVEL_MAJOR,		1,	0
},

{COMM_RTE_EVENT_OUTPUT_DISCONNECT, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_OUTPUT_CHAN, 0, 1, "OUTDISC", "Output Disconnected", 0,
	COMM_ALARM_LEVEL_MAJOR,		1,	0
},

{COMM_RTE_EVENT_CLIENT_WARMUP, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_OUTPUT_CHAN, 0, 1, "CLTWARM", "Client Warmup", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_CLIENT_FREERUN, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_OUTPUT_CHAN, 0, 1, "CLTFREE", "Client Freerun", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_CLIENT_FAST_TRACK, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_OUTPUT_CHAN, 0, 1, "CLTFSTRK", "Client Fast Track", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_CLIENT_NORMAL_TRACK, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_OUTPUT_CHAN, 0, 1, "CLTNMTRK", "Client Normal Track", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_CLIENT_BRIDGE, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_OUTPUT_CHAN, 0, 1, "CLTBRG", "Client Bridge", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_CLIENT_HOLDOVER, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_OUTPUT_CHAN, 0, 1, "CLTHOLD", "Client Holdover", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_CLIENT_CABLE_ADVANCE_INVALID, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_OUTPUT_CHAN, 0, 1, "CLTADVINV", "Port Cable Advance Invalid", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_IOC_EVNET_CLIENT_PERFORMANCE_UNSTABLE, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_OUTPUT_CHAN, 0, 1, "CLTUNSTBL", "Port Performance Unstable", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_INPUT_DISCONNECTED, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_INPUT, 0, 1, "INPDISC", "Input Disconnected", 0,
	COMM_ALARM_LEVEL_MINOR,		1,	0
},

{COMM_RTE_EVENT_INPUT_PHASE_ERROR, CEventKb::EVT_FLAG_REPORT_COND
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC,
	0, NUM_INPUT, 0, 1, "INPPHERR", "Input Phase Error", 0, 
	COMM_ALARM_LEVEL_MINOR,		1,  0
},

{COMM_RTE_EVENT_INPUT_IPLL_UNSETTLED, CEventKb::EVT_FLAG_REPORT_COND
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC,
	0, NUM_INPUT, 0, 1, "INPIPLL", "Input IPLL Unsettled", 0, 
	COMM_ALARM_LEVEL_MINOR,		1,  0
},

{COMM_RTE_EVENT_INPUT_FREQUENCY_ERROR, CEventKb::EVT_FLAG_REPORT_COND
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC,
	0, NUM_INPUT, 0, 1, "INPFERR", "Input Frequency Error", 0, 
	COMM_ALARM_LEVEL_MINOR,		1,  0
},

{COMM_RTE_EVENT_INPUT_OUT_OF_FRAME, CEventKb::EVT_FLAG_REPORT_COND
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC,
	0, NUM_INPUT, 0, 1, "INPOOF", "Input Out Of Frame", 0, 
	COMM_ALARM_LEVEL_MINOR,		1,  0
},

{COMM_RTE_EVENT_INPUT_AIS, CEventKb::EVT_FLAG_REPORT_COND
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC,
	0, NUM_INPUT, 0, 1, "INPAIS", "Input AIS", 0, 
	COMM_ALARM_LEVEL_MINOR,		1,  0
},

{COMM_RTE_EVENT_INPUT_BT3_UNSETTLED, CEventKb::EVT_FLAG_REPORT_COND
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC,
	0, NUM_INPUT, 0, 1, "INPBT3UN", "Input BT3 Unsettled", 0, 
	COMM_ALARM_LEVEL_MINOR,		1,  0
},

{COMM_RTE_EVENT_INPUT_POOR_SSM, CEventKb::EVT_FLAG_REPORT_COND
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC,
	0, NUM_INPUT, 0, 1, "POORSSM", "Input SSM Low", 0, 
	COMM_ALARM_LEVEL_MINOR,		1,  0
},

{COMM_RTE_EVENT_INPUT_SSM_CHANGE, CEventKb::EVT_FLAG_TRANSIENT,
	0, NUM_INPUT, 0, 1, "INPSSMCHG", "Input SSM Changed", 0, 
	COMM_ALARM_LEVEL_JUST_REPORT,		1,  0
},

{COMM_RTE_EVENT_SYSTEM_SSM_CHANGE, CEventKb::EVT_FLAG_TRANSIENT,
	0, 1, 0, 1, "SYSSSMCHG", "System SSM Changed", 0, 
	COMM_ALARM_LEVEL_JUST_REPORT,		1,  0
},

{COMM_RTE_EVENT_INPUT_CABLE_ADVANCE_INVALID, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_INPUT, 0, 1, "INPADVINV", "Input Cable Advance Invalid", 0,
	COMM_ALARM_LEVEL_MAJOR,		1,	0
},

{COMM_RTE_EVENT_INPUT_PERFORMANCE_UNSTABLE, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_INPUT, 0, 1, "INPUNSTBL", "Input Performance Unstable", 0,
	COMM_ALARM_LEVEL_MINOR,		1,	0
},
{COMM_RTE_EVENT_INPUT_DISQUALIFIED, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_INPUT, 0, 1, "INPDISQ", "Input Disqualified", 0,
	COMM_ALARM_LEVEL_MINOR,		1,	0
},
{COMM_RTE_EVENT_CLOCK_FREQUENCY, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CLKFREQ", "Clock in Frequency Mode", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},
{COMM_RTE_EVENT_INPUT_ACTIVE, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_INPUT, 0, 1, "INPACTV", "Input Active", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},
{COMM_RTE_EVENT_RTE_INCOMPATIBLE, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "RTEINCOMP", "RTE Incompatible", 0,
	COMM_ALARM_LEVEL_MAJOR,		1,	0
},

{COMM_RTE_EVENT_OUTPUT_TESTING, CEventKb::EVT_FLAG_REPORT_COND | CEventKb::EVT_FLAG_SLAVE_REPORT
	| CEventKb::EVT_FLAG_RESEND_PPC, 
	0, NUM_OUTPUT_CHAN, 0, 1, "OUTTEST", "Output Testing", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_EXTENDED_HOLDOVER, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "CLKEXTHOLD", "Clock Extended Holdover", 0,
	COMM_ALARM_LEVEL_MINOR,		1,	0
},

{COMM_RTE_EVENT_BACKUP_LOSS, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "BKUPLOSS", "Backup for Bestime Lost", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_SMART_CLOCK, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "SMTAVAIL", "Smart Clock Available", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_AUTO_RESET, CEventKb::EVT_FLAG_TRANSIENT, 
	0, 1, 0, 1, "AUTORST", "RTE Auto Reset", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	1
},

{COMM_RTE_EVENT_INPUT_SERVER_WARMUP, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	CHAN_DTI1, CHAN_DTI2 + 1, 0, 1, "INSRVWARM", "Server on Input Warmup", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_INPUT_SERVER_FREERUN, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	CHAN_DTI1, CHAN_DTI2 + 1, 0, 1, "INSRVFREE", "Server on Input Freerun", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_INPUT_SERVER_FAST_TRACK, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	CHAN_DTI1, CHAN_DTI2 + 1, 0, 1, "INSRVFAST", "Server on Input Fast Track", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_INPUT_SERVER_NORMAL_TRACK, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	CHAN_DTI1, CHAN_DTI2 + 1, 0, 1, "INSRVNORM", "Server on Input Normal Track", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_INPUT_SERVER_HOLDOVER, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	CHAN_DTI1, CHAN_DTI2 + 1, 0, 1, "INSRVHOLD", "Server on Input Holdover", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_INPUT_PATH_INVALID, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	CHAN_DTI1, CHAN_DTI2 + 1, 0, 1, "INPATHINV", "Invalid Input Path Traceability", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_INPUT_TOD_INVALID, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	CHAN_DTI1, CHAN_DTI2 + 1, 0, 1, "INTODINV", "Invalid Input TOD Message", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_INPUT_GPS_NO_RGP, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "NORGP", "No RGP from PPC", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_INPUT_GPS_ACQUIRING, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "GPSACQ", "GPS Antenna Acquiring", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_GPS_PHASE_PULLING, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "PHPULL", "Pulling 1PPS to GPS phase", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_BT3_WARM_RESET, CEventKb::EVT_FLAG_TRANSIENT, 
	0, 1, 0, 1, "BT3WMRST", "BT3 Warm Reset", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_BT3_COLD_RESET, CEventKb::EVT_FLAG_TRANSIENT, 
	0, 1, 0, 1, "BT3COLDRST", "BT3 Cold Reset", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_BT3_ENGINE, CEventKb::EVT_FLAG_TRANSIENT, 
	0, 3, 0, 8, "BT3ENGINE", "BT3 Engine Shift", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_BT3_PHASE_CONTROL, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 3, 0, 1, "BT3PHCTRL", "BT3 Phase Ctrl 0=freq 1=Norm 2=fast", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_PLL_UNLOCK, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 5, 0, 1, "PLLUNLOCK", "PLL unlock", 0,
	COMM_ALARM_LEVEL_MAJOR,		1,	0
},

{COMM_RTE_EVENT_RUBIDIUM_UNLOCK, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "RUBUNLOCK", "Rubidium unlock", 0,
	COMM_ALARM_LEVEL_MAJOR,		1,	0
},

{COMM_RTE_EVENT_DCM_UNLOCK, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "DCMUNLOCK", "DCM unlock", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_OCXO_OUT_OF_RANGE, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "OVENOOR", "OCXO Current Out of Range", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_VOLT_OUT_OF_RANGE, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 6, 0, 1, "VOLTOOR", "Power Supply Out of Range", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_ARM_SYNC_JAM, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "ARMJAM", "Sync Jam armed by PPC", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_TPIU_TUNE_OUT_OF_RANGE, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "TPIUTUNE", "TPIU Tuning Out Of Range", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_TA_TUNE_OUT_OF_RANGE, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "TATUNE", "Time Antenna Tuning Out Of Range", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_GPS_CRC_ERROR, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "GPSCRC", "GPS Input CRC Error", 0,
	COMM_ALARM_LEVEL_JUST_REPORT,		1,	0
},

{COMM_RTE_EVENT_XSYNC_LOSS, CEventKb::EVT_FLAG_REPORT_COND 
	| CEventKb::EVT_FLAG_SLAVE_REPORT | CEventKb::EVT_FLAG_RESEND_PPC, 
	0, 1, 0, 1, "XSYNCLOS", "Xsync Loss of Signal", 0,
	COMM_ALARM_LEVEL_MAJOR,		1,	1
},

{COMM_RTE_EVENT_NONE, 0, 0, 0, 0, 0, NULL, 0} // Last one 

};

CEventDti::CEventDti(CEventKb *pKb)
{
	CEventApp::AddEventList(m_eventList, pKb);
}

CEventDti::~CEventDti()
{

}

#else 
static int what_a_dummy;
#endif
